def n1():
    class Restaurant:
        def __init__(self, restaurant_name, cuisine_type, raiting=0):
            self.restaurant_name = restaurant_name
            self.cuisine_type = cuisine_type
            self.rating = raiting

        def describe_restaurant(self):
            print(f"Ресторан {self.restaurant_name} специализируется на {self.cuisine_type} кухне Рейтинг: {self.raiting} ")

        def open_restaurant(self):
            print(f"Ресторан {self.restaurant_name} открыт!")

        def up_raiting(self, new_raiting):
            if 0 <= new_raiting <= 5:
                self.raiting = new_raiting
                print(f"Рейтинг ресторана {self.restaurant_name} успешно обновлен! Новый рейтинг: {self.raiting}")
            else:
                print("Рейтинг только от 0 до 5")
    newRestaurant = Restaurant("Lamb", "южная", 3)
    print(newRestaurant.restaurant_name)
    print(newRestaurant.cuisine_type)
    newRestaurant.up_rating(4)
    newRestaurant.describe_restaurant()
    newRestaurant.open_restaurant()

    restaurant1 = Restaurant("Crystal", "смешанная", 4)
    restaurant2 = Restaurant("Щелкунчик", "русская", 3)
    restaurant3 = Restaurant("Амаркорд", "итальянская", 4)

    restaurant1.describe_restaurant()
    restaurant2.describe_restaurant()
    restaurant3.describe_restaurant()

    class IceCreamStand:
        def __init__(self, name, cuisine_type, flavors, location, working_hours):
            super().__init__(name, cuisine_type)
            self.location = location
            self.working_hours = working_hours
            self.flavors = flavors

        def add_flavor(self, new_flavor):
            if new_flavor not in self.flavors:
                self.flavors.append(new_flavor)

        def remove_flavor(self, old_flavor):
            if old_flavor in self.flavors:
                self.flavors.remove(old_flavor)

        def has_flavor(self, target_flavor):
            return target_flavor in self.flavors

        def stick_ice_cream(self):
            pass

        def soft_ice_cream(self):
            pass

    cafe_location = "Санкт-Петербург, Богатырский проспект, 64 к1, 1 этаж Район Приморский"
    working_hours = "Пн-вс: 11:00—22:00"
    ice_creamm = IceCreamStand("Детское кафе Karlsson boom", "мороженое", ["ванильное", "шоколадное"],
                                    cafe_location, working_hours)

    print("Локация:", ice_creamm.location)
    print("Время работы:", ice_creamm.working_hours)
    print("Сорта мороженого: ", ice_creamm.flavors)
    
    ice_creamm.add_flavor("клубничное")
    print("Новый сорт мороженого добавлен: ", ice_creamm.flavors)

  
    ice_creamm.remove_flavor("ванильное")
    print("Старый сорт мороженого удален: ", ice_creamm.flavors)

   
    if ice_creamm.has_flavor("шоколадное"):
        print("Мороженое 'Шоколадное' присутствует в меню.")
    else:
        print("Мороженое 'Шоколадное' отсутствует в меню.")


    ice_creamm.stick_ice_cream()
    ice_creamm.soft_ice_cream()
n1()
